#!/bin/bash

echo "üöÄ –ó–∞–ø—É—Å–∫ –ò–ò-–ª–∞–±–æ—Ä–∞—Ç–æ—Ä–∏–∏ K2.tech..."

# –ü—Ä–æ–≤–µ—Ä—è–µ–º Docker
if ! command -v docker &> /dev/null; then
    echo "‚ùå Docker –Ω–µ –Ω–∞–π–¥–µ–Ω. –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ Docker –∏ –ø–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞."
    exit 1
fi

# –ü—Ä–æ–≤–µ—Ä—è–µ–º Docker Compose
if ! command -v docker-compose &> /dev/null; then
    echo "‚ùå Docker Compose –Ω–µ –Ω–∞–π–¥–µ–Ω. –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ Docker Compose –∏ –ø–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞."
    exit 1
fi

echo "‚úÖ Docker –Ω–∞–π–¥–µ–Ω"

# –°–æ–∑–¥–∞–µ–º .env.local –µ—Å–ª–∏ –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
if [ ! -f .env.local ]; then
    echo "üìù –°–æ–∑–¥–∞–µ–º —Ñ–∞–π–ª .env.local..."
    cat > .env.local << EOF
# Frontend Environment Variables
NEXT_PUBLIC_API_URL=http://localhost:3001/api
NEXT_PUBLIC_WS_URL=ws://localhost:3001/ws

# Backend Environment Variables
DB_HOST=postgres
DB_PORT=5432
DB_USER=postgres
DB_PASSWORD=password
DB_NAME=k2tech_ai_lab
DB_SSL=false

REDIS_HOST=redis
REDIS_PORT=6379
REDIS_PASSWORD=
REDIS_DB=0

JWT_SECRET=$(openssl rand -base64 32)
JWT_REFRESH_SECRET=$(openssl rand -base64 32)

SMTP_HOST=localhost
SMTP_PORT=587
SMTP_SECURE=false
SMTP_USER=
SMTP_PASS=
SMTP_FROM=noreply@k2tech.com

FRONTEND_URL=http://localhost:3000
LOG_LEVEL=info
NODE_ENV=development
EOF
    echo "‚úÖ –§–∞–π–ª .env.local —Å–æ–∑–¥–∞–Ω"
fi

# –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏
echo "üì¶ –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏..."
npm install

# –ó–∞–ø—É—Å–∫–∞–µ–º —Ç–æ–ª—å–∫–æ –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö –∏ Redis —á–µ—Ä–µ–∑ Docker
echo "üê≥ –ó–∞–ø—É—Å–∫–∞–µ–º PostgreSQL –∏ Redis..."
docker-compose up -d postgres redis

# –ñ–¥–µ–º –ø–æ–∫–∞ –±–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö –∑–∞–ø—É—Å—Ç–∏—Ç—Å—è
echo "‚è≥ –ñ–¥–µ–º –∑–∞–ø—É—Å–∫–∞ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö..."
sleep 10

# –ü—Ä–∏–º–µ–Ω—è–µ–º –º–∏–≥—Ä–∞—Ü–∏–∏
echo "üîÑ –ü—Ä–∏–º–µ–Ω—è–µ–º –º–∏–≥—Ä–∞—Ü–∏–∏..."
cd backend
npm install
npm run db:migrate
npm run db:seed
cd ..

# –ó–∞–ø—É—Å–∫–∞–µ–º backend
echo "üîß –ó–∞–ø—É—Å–∫–∞–µ–º backend..."
cd backend
npm run dev &
BACKEND_PID=$!
cd ..

# –ñ–¥–µ–º –ø–æ–∫–∞ backend –∑–∞–ø—É—Å—Ç–∏—Ç—Å—è
echo "‚è≥ –ñ–¥–µ–º –∑–∞–ø—É—Å–∫–∞ backend..."
sleep 5

# –ó–∞–ø—É—Å–∫–∞–µ–º frontend
echo "üé® –ó–∞–ø—É—Å–∫–∞–µ–º frontend..."
npm run dev &
FRONTEND_PID=$!

echo ""
echo "üéâ –ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –∑–∞–ø—É—â–µ–Ω–æ!"
echo ""
echo "üì± Frontend: http://localhost:3000"
echo "üîß Backend API: http://localhost:3001/api"
echo "üóÑÔ∏è PostgreSQL: localhost:5432"
echo "üì¶ Redis: localhost:6379"
echo ""
echo "–î–ª—è –æ—Å—Ç–∞–Ω–æ–≤–∫–∏ –Ω–∞–∂–º–∏—Ç–µ Ctrl+C"

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–≥–æ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è
cleanup() {
    echo ""
    echo "üõë –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ..."
    kill $BACKEND_PID 2>/dev/null
    kill $FRONTEND_PID 2>/dev/null
    docker-compose down
    exit 0
}

# –ü–µ—Ä–µ—Ö–≤–∞—Ç—ã–≤–∞–µ–º —Å–∏–≥–Ω–∞–ª—ã –¥–ª—è –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–≥–æ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è
trap cleanup SIGINT SIGTERM

# –ñ–¥–µ–º –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è
wait


