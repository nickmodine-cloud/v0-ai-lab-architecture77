version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: k2tech-postgres
    environment:
      POSTGRES_DB: k2tech_ai_lab
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./database/schema.sql:/docker-entrypoint-initdb.d/schema.sql
    networks:
      - k2tech-network

  # Redis Cache
  redis:
    image: redis:7-alpine
    container_name: k2tech-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - k2tech-network

  # Backend API
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: k2tech-backend
    environment:
      - NODE_ENV=production
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_USER=postgres
      - DB_PASSWORD=password
      - DB_NAME=k2tech_ai_lab
      - DB_SSL=false
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - JWT_SECRET=your-super-secret-jwt-key-here
      - JWT_REFRESH_SECRET=your-super-secret-refresh-key-here
      - FRONTEND_URL=http://localhost:3000
    ports:
      - "3001:3001"
    depends_on:
      - postgres
      - redis
    networks:
      - k2tech-network
    volumes:
      - ./backend/logs:/app/logs

  # Frontend
  frontend:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: k2tech-frontend
    environment:
      - NODE_ENV=production
      - NEXT_PUBLIC_API_URL=http://localhost:3001/api
      - NEXT_PUBLIC_WS_URL=ws://localhost:3001/ws
    ports:
      - "3000:3000"
    depends_on:
      - backend
    networks:
      - k2tech-network

  # Nginx Reverse Proxy
  nginx:
    image: nginx:alpine
    container_name: k2tech-nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
      - ./ssl:/etc/nginx/ssl
    depends_on:
      - frontend
      - backend
    networks:
      - k2tech-network

volumes:
  postgres_data:
  redis_data:

networks:
  k2tech-network:
    driver: bridge


